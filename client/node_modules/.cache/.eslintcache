[{"C:\\Users\\User\\Desktop\\typescript\\client\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\typescript\\client\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\typescript\\client\\src\\store\\index.ts":"3","C:\\Users\\User\\Desktop\\typescript\\client\\src\\store\\github\\github.api.ts":"4","C:\\Users\\User\\Desktop\\typescript\\client\\src\\pages\\Chat.tsx":"5","C:\\Users\\User\\Desktop\\typescript\\client\\src\\pages\\FavPages.tsx":"6","C:\\Users\\User\\Desktop\\typescript\\client\\src\\pages\\HomePage.tsx":"7","C:\\Users\\User\\Desktop\\typescript\\client\\src\\components\\Navar.tsx":"8","C:\\Users\\User\\Desktop\\typescript\\client\\src\\components\\Searcher.tsx":"9","C:\\Users\\User\\Desktop\\typescript\\client\\src\\components\\ItemView.tsx":"10","C:\\Users\\User\\Desktop\\typescript\\client\\src\\hooks\\useDeboundcer.ts":"11"},{"size":657,"mtime":1676402794749,"results":"12","hashOfConfig":"13"},{"size":627,"mtime":1677948823523,"results":"14","hashOfConfig":"13"},{"size":311,"mtime":1676643263024,"results":"15","hashOfConfig":"13"},{"size":1163,"mtime":1677852633869,"results":"16","hashOfConfig":"13"},{"size":1752,"mtime":1677948712886,"results":"17","hashOfConfig":"13"},{"size":98,"mtime":1675945665997,"results":"18","hashOfConfig":"13"},{"size":2761,"mtime":1677852636695,"results":"19","hashOfConfig":"13"},{"size":517,"mtime":1677852867670,"results":"20","hashOfConfig":"13"},{"size":1833,"mtime":1677525540883,"results":"21","hashOfConfig":"13"},{"size":3218,"mtime":1677852475929,"results":"22","hashOfConfig":"13"},{"size":373,"mtime":1676656781246,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"83c8vh",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"27"},"C:\\Users\\User\\Desktop\\typescript\\client\\src\\index.tsx",[],[],[],"C:\\Users\\User\\Desktop\\typescript\\client\\src\\App.tsx",["62","63","64","65"],[],"C:\\Users\\User\\Desktop\\typescript\\client\\src\\store\\index.ts",[],[],"C:\\Users\\User\\Desktop\\typescript\\client\\src\\store\\github\\github.api.ts",[],[],"C:\\Users\\User\\Desktop\\typescript\\client\\src\\pages\\Chat.tsx",["66","67"],[],"C:\\Users\\User\\Desktop\\typescript\\client\\src\\pages\\FavPages.tsx",[],[],"C:\\Users\\User\\Desktop\\typescript\\client\\src\\pages\\HomePage.tsx",["68","69","70","71","72"],[],"import { ServerResponse } from \"http\";\r\nimport React, { useEffect, useState, useRef,useMemo } from \"react\";\r\nimport { ItemView } from \"../components/ItemView\";\r\nimport { Searcher } from \"../components/Searcher\";\r\nimport { useDebouncer } from \"../hooks/useDeboundcer\";\r\nimport { IRepo, Item } from \"../models/models\";\r\nimport { useLazySearchReposQuery, useSearchUsersQuery } from \"../store/github/github.api\";\r\n\r\nexport default function HomePage(){ \r\n     \r\n    const [drop,setDrop]=useState(true)\r\n    const [search, setSearch]=useState<string>(\"\")\r\n    const [userId, setUserId]=useState<any>()\r\n     \r\n    const debounced=useDebouncer(search)\r\n\r\n    const debounceSearch=(searched:string):void=>{ \r\n         setSearch(searched)\r\n         \r\n    }\r\n\r\n    const {isLoading, isError, data}=useSearchUsersQuery(debounced, {\r\n        skip: debounced.length<3\r\n        })\r\n    const [fetchRepo,{data:repos,isLoading:areRepos}]=useLazySearchReposQuery()\r\n    \r\n    const getRepos=(username:string):void=>{\r\n        fetchRepo(username)\r\n    } \r\n\r\n\r\n\r\n  const getItem=(id:any)=>{\r\n      setUserId(id) \r\n      setDrop(false)\r\n  } \r\n \r\n   const chosenItem=useMemo(()=>data?.filter((item)=>item.id===userId),[userId])\r\n   \r\n\r\n   useEffect(()=>{\r\n     console.log(chosenItem)\r\n   },[userId])\r\n   \r\n    \r\n    \r\n    return     <div className=\"mt-10 mx-5 flex space-between flex-col  items-center\" onClick={()=>setDrop(false)}>\r\n                         <Searcher  drop= {drop}\r\n                                    setDrop={setDrop} \r\n                                    debounced={debounced}\r\n                                    isLoading={isLoading}\r\n                                    data={data}\r\n                                    getRepos={getRepos}\r\n                                    setSearch={debounceSearch}\r\n                                    getItem={getItem}\r\n                                    />\r\n                         \r\n                        {isError&&<p className=\"my-10 text-red-600 text-center\">Something went wrong with the fetching</p>}\r\n                         <ItemView chosenItem={chosenItem}\r\n                                    getRepos={getRepos}\r\n                                    areRepos={areRepos}\r\n                                    repos={repos}\r\n                                    />\r\n                         \r\n               </div>\r\n    \r\n}\r\n\r\n\r\nexport interface SearchType{\r\n    data?:Item[],\r\n    isLoading:boolean,\r\n    drop:boolean, \r\n    debounced:string, \r\n    getRepos:(username:string)=>void,\r\n    setDrop:(value:boolean)=>void, \r\n    setSearch:(searched:string)=>void,\r\n    getItem:(id:any)=>void,\r\n\r\n}\r\n \r\nexport interface SearchResponse{\r\n    data: Item[], \r\n    isLoading:boolean, \r\n    isError: boolean\r\n}\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\typescript\\client\\src\\components\\Navar.tsx",[],[],"C:\\Users\\User\\Desktop\\typescript\\client\\src\\components\\Searcher.tsx",["73","74","75","76","77","78","79"],[],"import { ServerResponse } from \"http\";\r\nimport React, { useEffect, useState, useRef,useMemo } from \"react\";\r\nimport { useDebouncer } from \"../hooks/useDeboundcer\";\r\nimport { SearchType } from \"../pages/HomePage\";\r\nimport { useLazySearchReposQuery, useSearchUsersQuery } from \"../store/github/github.api\";\r\n\r\nexport function Searcher({data,setDrop, setSearch, debounced,getRepos,isLoading,drop, getItem}:SearchType){\r\n\r\n    \r\n    \r\n\r\n     const searchOptions=useMemo(()=>data?.slice(0,8),[data])\r\n\r\n\r\n    return    <div className=\"flex space-between\">   \r\n                    <div className=\"flex-col flex items-center\"\r\n                        onClick={(e)=>e.stopPropagation()}>\r\n                        <input className=\"outline-none border-black border-solid border-2 w-60 mt-2 rounded-1xl\"\r\n                            onChange={(e)=>setSearch(e.target.value)}\r\n                            onClick={()=>setDrop(true)}> \r\n                        </input>\r\n                        {isLoading&&<p>Loading...</p>}\r\n\r\n                        \r\n                        {drop&&<ul className=\"list-none shadow-500 w-[100%] shadow-md z-5jhgh0\">\r\n                                {searchOptions?.map((el,key)=>{\r\n                                return<li key={el.id} className=\"shadow-500 text-black-500 hover:bg-sky-700 w-[100%] text-start cursor-pointer\"\r\n                                                    onClick={()=>getItem(el.id)}\r\n                                                    >{el.login}\r\n                                                    </li>\r\n                                })}\r\n                                </ul>\r\n                                }\r\n                    </div>\r\n\r\n\r\n                    <button  className=\"border-black border-2 mx-2 mt-2 h-7 text-sm  w-40\">Click</button> \r\n                </div>\r\n}","C:\\Users\\User\\Desktop\\typescript\\client\\src\\components\\ItemView.tsx",["80","81"],[],"import React,{FC, useState, useEffect, useMemo} from \"react\"\r\nimport { IRepo, Item } from \"../models/models\"\r\n\r\n\r\n interface ChosenItem{ \r\n    chosenItem?:Item[],\r\n    getRepos:(username:string)=>void,\r\n    repos?:IRepo[], \r\n    areRepos:boolean,\r\n    \r\n }\r\nexport const ItemView:FC<ChosenItem>=({chosenItem,getRepos,repos,areRepos})=>{\r\n   const [isLoading, setIsLoading]=useState<boolean>()\r\n\r\n\r\n     useEffect(()=>{\r\n       \r\n          setIsLoading(true)     \r\n          setTimeout(()=>setIsLoading(false),1000)\r\n        \r\n      \r\n      \r\n      }, [chosenItem] )\r\n\r\n      console.log(chosenItem)\r\n  \r\n  return <>\r\n            {chosenItem?\r\n                         isLoading? \r\n                                <p>Loading!!!</p>\r\n                                  :\r\n                                chosenItem.map(item=>{ \r\n                                                return <div>\r\n                                                            <div key={item.id} className=\"flex start flex-col items-start my-10 w-[60vw] border-rgb(170, 168, 168) border-solid border-2 rounded-md \">\r\n                                                                        <div className=\"flex space-between \">\r\n                                                                            <img className=\"rounded-full w-[4rem] m-2\" src={item.avatar_url}/>\r\n                                                                              <div className=\"flex flex-col mt-2 ml-[1rem]\">\r\n                                                                                <p className=\"font-medium text-lg\">{item.login}</p>\r\n                                                                                <a  href={`https://github.com/${item.login}`}>Link</a>\r\n                                                                                <p className=\"font-medium text-sm\" \r\n                                                                                  onClick={()=>getRepos(item.login)}>Fetch Repos</p>\r\n                                                                              </div>\r\n                                                                                \r\n                                                                        </div>\r\n                                                                  </div>\r\n                                                                <div>\r\n                                                                 {areRepos&&<p>Repos are loading..</p>}\r\n                                                                 {repos&&repos.map(repo=>{\r\n                                                                  return <div>\r\n\r\n                                                                          </div>\r\n                                                                 })}\r\n                                                                </div>\r\n                                                                \r\n                                                      </div> \r\n                                            })\r\n                         :\r\n                         <p className=\"mt-20\">You've not searched for anybody yet! Go ahead & do that!</p>}\r\n         </>\r\n\r\n\r\n}","C:\\Users\\User\\Desktop\\typescript\\client\\src\\hooks\\useDeboundcer.ts",["82","83"],[],"import {useState, useEffect} from \"react\"\r\nimport { clearTimeout } from \"timers\"\r\n\r\n\r\nexport  function useDebouncer(value:string, delay:number=500): string{\r\n     \r\n    const [debounced,setDebounced]=useState(value)\r\n\r\n    useEffect(()=>{\r\n        const handler=setTimeout( ()=>setDebounced(value),delay)\r\n       \r\n    }, [value,delay])\r\n\r\n\r\n\r\n    return debounced\r\n}\r\n\r\n\r\n",{"ruleId":"84","severity":1,"message":"85","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":14},{"ruleId":"84","severity":1,"message":"88","line":10,"column":10,"nodeType":"86","messageId":"87","endLine":10,"endColumn":14},{"ruleId":"84","severity":1,"message":"89","line":13,"column":11,"nodeType":"86","messageId":"87","endLine":13,"endColumn":17},{"ruleId":"84","severity":1,"message":"90","line":17,"column":7,"nodeType":"86","messageId":"87","endLine":17,"endColumn":10},{"ruleId":"91","severity":1,"message":"92","line":44,"column":7,"nodeType":"93","endLine":44,"endColumn":9,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":49,"column":7,"nodeType":"93","endLine":49,"endColumn":9,"suggestions":"96"},{"ruleId":"84","severity":1,"message":"97","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"98","line":2,"column":38,"nodeType":"86","messageId":"87","endLine":2,"endColumn":44},{"ruleId":"84","severity":1,"message":"99","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":15},{"ruleId":"91","severity":1,"message":"100","line":38,"column":72,"nodeType":"93","endLine":38,"endColumn":80,"suggestions":"101"},{"ruleId":"91","severity":1,"message":"102","line":43,"column":6,"nodeType":"93","endLine":43,"endColumn":14,"suggestions":"103"},{"ruleId":"84","severity":1,"message":"97","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"104","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"105","line":2,"column":28,"nodeType":"86","messageId":"87","endLine":2,"endColumn":36},{"ruleId":"84","severity":1,"message":"98","line":2,"column":38,"nodeType":"86","messageId":"87","endLine":2,"endColumn":44},{"ruleId":"84","severity":1,"message":"106","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":22},{"ruleId":"84","severity":1,"message":"107","line":5,"column":10,"nodeType":"86","messageId":"87","endLine":5,"endColumn":33},{"ruleId":"84","severity":1,"message":"108","line":5,"column":35,"nodeType":"86","messageId":"87","endLine":5,"endColumn":54},{"ruleId":"84","severity":1,"message":"109","line":1,"column":40,"nodeType":"86","messageId":"87","endLine":1,"endColumn":47},{"ruleId":"110","severity":1,"message":"111","line":36,"column":77,"nodeType":"112","endLine":36,"endColumn":143},{"ruleId":"84","severity":1,"message":"113","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":22},{"ruleId":"84","severity":1,"message":"114","line":10,"column":15,"nodeType":"86","messageId":"87","endLine":10,"endColumn":22},"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'ForApp' is defined but never used.","'arr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'subscribe'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.",["116"],"'ServerResponse' is defined but never used.","'useRef' is defined but never used.","'IRepo' is defined but never used.","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'chosenItem'. Either include it or remove the dependency array.",["118"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useDebouncer' is defined but never used.","'useLazySearchReposQuery' is defined but never used.","'useSearchUsersQuery' is defined but never used.","'useMemo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'clearTimeout' is defined but never used.","'handler' is assigned a value but never used.",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [subscribe]",{"range":"127","text":"128"},"Update the dependencies array to be: [values]",{"range":"129","text":"130"},"Update the dependencies array to be: [data, userId]",{"range":"131","text":"132"},"Update the dependencies array to be: [chosenItem, userId]",{"range":"133","text":"134"},[919,921],"[subscribe]",[991,993],"[values]",[1197,1205],"[data, userId]",[1270,1278],"[chosenItem, userId]"]