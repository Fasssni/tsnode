{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const githubApi = createApi({\n  reducerPath: 'github/api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://api.github.com/\"\n  }),\n  endpoints: build => ({\n    searchUsers: build.query({\n      query: search => ({\n        url: \"search/users\",\n        params: {\n          q: search,\n          per_page: 10\n        }\n      }),\n      transformResponse: response => response.items\n    }),\n    searchRepos: build.query({\n      query: username => ({\n        url: `users/${username}/repos`\n      })\n    })\n  })\n});\nexport const {\n  useSearchUsersQuery,\n  useLazySearchReposQuery\n} = githubApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","githubApi","reducerPath","baseQuery","baseUrl","endpoints","build","searchUsers","query","search","url","params","q","per_page","transformResponse","response","items","searchRepos","username","useSearchUsersQuery","useLazySearchReposQuery"],"sources":["C:/Users/User/Desktop/typescript/src/store/github/github.api.ts"],"sourcesContent":["import { createApi,fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nimport { Item, ServerResponse} from \"../../models/models\";\r\n\r\nexport const githubApi=createApi({\r\n    reducerPath:'github/api',\r\n    baseQuery: fetchBaseQuery({\r\n                        baseUrl:\"https://api.github.com/\"\r\n                    }),\r\n    endpoints:build=>({\r\n                      searchUsers:build.query<Item[], string>({\r\n                        query:(search:string)=>({ \r\n                            url:\"search/users\",\r\n                            params:{\r\n                                q:search,\r\n                                per_page:10,\r\n                            }\r\n                        }), \r\n                        transformResponse:(response:ServerResponse<Item>)=> response.items\r\n                      }), \r\n\r\n                      searchRepos:build.query<any, string>({\r\n                         query:(username:string)=>({\r\n                           url:`users/${username}/repos`\r\n\r\n                         })\r\n                      })\r\n                    })\r\n})\r\n\r\nexport const {useSearchUsersQuery,useLazySearchReposQuery}=githubApi"],"mappings":"AAAA,SAASA,SAAS,EAACC,cAAc,QAAQ,8BAA8B;AAIvE,OAAO,MAAMC,SAAS,GAACF,SAAS,CAAC;EAC7BG,WAAW,EAAC,YAAY;EACxBC,SAAS,EAAEH,cAAc,CAAC;IACNI,OAAO,EAAC;EACZ,CAAC,CAAC;EAClBC,SAAS,EAACC,KAAK,KAAG;IACAC,WAAW,EAACD,KAAK,CAACE,KAAK,CAAiB;MACtCA,KAAK,EAAEC,MAAa,KAAI;QACpBC,GAAG,EAAC,cAAc;QAClBC,MAAM,EAAC;UACHC,CAAC,EAACH,MAAM;UACRI,QAAQ,EAAC;QACb;MACJ,CAAC,CAAC;MACFC,iBAAiB,EAAEC,QAA6B,IAAIA,QAAQ,CAACC;IAC/D,CAAC,CAAC;IAEFC,WAAW,EAACX,KAAK,CAACE,KAAK,CAAc;MAClCA,KAAK,EAAEU,QAAe,KAAI;QACxBR,GAAG,EAAE,SAAQQ,QAAS;MAExB,CAAC;IACJ,CAAC;EACH,CAAC;AACrB,CAAC,CAAC;AAEF,OAAO,MAAM;EAACC,mBAAmB;EAACC;AAAuB,CAAC,GAACnB,SAAS"},"metadata":{},"sourceType":"module"}